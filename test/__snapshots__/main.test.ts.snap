// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Api Spec 1`] = `
Object {
  "components": Object {
    "schemas": Object {
      "AdvancedModel": Object {
        "properties": Object {
          "basic": Object {
            "$ref": "#/components/schemas/BasicModel",
          },
          "greeting": Object {
            "type": "string",
          },
          "postfix": Object {
            "type": "string",
          },
        },
        "required": Array [
          "greeting",
          "basic",
        ],
        "title": "AdvancedModel",
        "type": "object",
      },
      "BasicModel": Object {
        "properties": Object {
          "someNumber": Object {
            "pattern": "[0-9]+",
            "type": "number",
          },
          "someString": Object {
            "type": "string",
          },
        },
        "required": Array [
          "someString",
          "someNumber",
        ],
        "title": "BasicModel",
        "type": "object",
      },
      "ResponseModel": Object {
        "properties": Object {
          "message": Object {
            "type": "string",
          },
        },
        "required": Array [
          "message",
        ],
        "title": "ResponseModel",
        "type": "object",
      },
    },
    "securitySchemes": Object {
      "authorizer": Object {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authtype": "custom",
      },
    },
  },
  "info": Object {
    "title": "BlogCdkOpenApi",
    "version": Any<String>,
  },
  "openapi": "3.0.1",
  "paths": Object {
    "/{hello}/advanced": Object {
      "post": Object {
        "parameters": Array [
          Object {
            "in": "path",
            "name": "hello",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "",
              },
            },
          },
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/ResponseModel",
                },
              },
            },
            "description": "200 response",
            "headers": Object {
              "Access-Control-Allow-Credentials": Object {
                "schema": Object {
                  "type": "string",
                },
              },
              "Access-Control-Allow-Origin": Object {
                "schema": Object {
                  "type": "string",
                },
              },
              "Content-Type": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
          },
        },
        "security": Array [
          Object {
            "authorizer": Array [],
          },
        ],
      },
    },
    "/{hello}/basic": Object {
      "post": Object {
        "parameters": Array [
          Object {
            "in": "path",
            "name": "hello",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "",
              },
            },
          },
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/ResponseModel",
                },
              },
            },
            "description": "200 response",
            "headers": Object {
              "Access-Control-Allow-Credentials": Object {
                "schema": Object {
                  "type": "string",
                },
              },
              "Access-Control-Allow-Origin": Object {
                "schema": Object {
                  "type": "string",
                },
              },
              "Content-Type": Object {
                "schema": Object {
                  "type": "string",
                },
              },
            },
          },
        },
        "security": Array [
          Object {
            "authorizer": Array [],
          },
        ],
      },
    },
  },
}
`;

exports[`Snapshot 1`] = `
Object {
  "Outputs": Object {
    "OpenApiOpenApiApiEndpoint756A510B": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "OpenApiOpenApiApi2E1DE449",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "OpenApiOpenApiApiDeploymentStageprod143ED280",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters4229e3ca613f457841c56f01ac9c10a33a209ecd00ed87c06aa628b1d1063b76ArtifactHashF467ECE7": Object {
      "Description": "Artifact hash for asset \\"4229e3ca613f457841c56f01ac9c10a33a209ecd00ed87c06aa628b1d1063b76\\"",
      "Type": "String",
    },
    "AssetParameters4229e3ca613f457841c56f01ac9c10a33a209ecd00ed87c06aa628b1d1063b76S3Bucket38E835CA": Object {
      "Description": "S3 bucket for asset \\"4229e3ca613f457841c56f01ac9c10a33a209ecd00ed87c06aa628b1d1063b76\\"",
      "Type": "String",
    },
    "AssetParameters4229e3ca613f457841c56f01ac9c10a33a209ecd00ed87c06aa628b1d1063b76S3VersionKey2EDD6DB1": Object {
      "Description": "S3 key for asset version \\"4229e3ca613f457841c56f01ac9c10a33a209ecd00ed87c06aa628b1d1063b76\\"",
      "Type": "String",
    },
    "AssetParameters85328f19b68253a2c5a78f85945770d92a8e35594f71eb10e9b33acafa868726ArtifactHash9888BC96": Object {
      "Description": "Artifact hash for asset \\"85328f19b68253a2c5a78f85945770d92a8e35594f71eb10e9b33acafa868726\\"",
      "Type": "String",
    },
    "AssetParameters85328f19b68253a2c5a78f85945770d92a8e35594f71eb10e9b33acafa868726S3Bucket18A54A74": Object {
      "Description": "S3 bucket for asset \\"85328f19b68253a2c5a78f85945770d92a8e35594f71eb10e9b33acafa868726\\"",
      "Type": "String",
    },
    "AssetParameters85328f19b68253a2c5a78f85945770d92a8e35594f71eb10e9b33acafa868726S3VersionKeyFEE45B1A": Object {
      "Description": "S3 key for asset version \\"85328f19b68253a2c5a78f85945770d92a8e35594f71eb10e9b33acafa868726\\"",
      "Type": "String",
    },
    "AssetParametersed882f74d49503232e12bf9cada04c32c5c07a9222b6d2b06c5f23a481e84ab6ArtifactHash70C86D71": Object {
      "Description": "Artifact hash for asset \\"ed882f74d49503232e12bf9cada04c32c5c07a9222b6d2b06c5f23a481e84ab6\\"",
      "Type": "String",
    },
    "AssetParametersed882f74d49503232e12bf9cada04c32c5c07a9222b6d2b06c5f23a481e84ab6S3Bucket65B490D4": Object {
      "Description": "S3 bucket for asset \\"ed882f74d49503232e12bf9cada04c32c5c07a9222b6d2b06c5f23a481e84ab6\\"",
      "Type": "String",
    },
    "AssetParametersed882f74d49503232e12bf9cada04c32c5c07a9222b6d2b06c5f23a481e84ab6S3VersionKeyBA2A8C50": Object {
      "Description": "S3 key for asset version \\"ed882f74d49503232e12bf9cada04c32c5c07a9222b6d2b06c5f23a481e84ab6\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "OpenApiOpenApiApi2E1DE449": Object {
      "Properties": Object {
        "Name": "OpenApiApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "OpenApiOpenApiApiAccountA1F35474": Object {
      "DependsOn": Array [
        "OpenApiOpenApiApi2E1DE449",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "OpenApiOpenApiApiCloudWatchRole26232647",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "OpenApiOpenApiApiAdvancedModelD703FA70": Object {
      "Properties": Object {
        "ContentType": "application/json",
        "Name": "AdvancedModel",
        "RestApiId": Object {
          "Ref": "OpenApiOpenApiApi2E1DE449",
        },
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": Object {
            "basic": Object {
              "$ref": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "https://apigateway.amazonaws.com/restapis/",
                    Object {
                      "Ref": "OpenApiOpenApiApi2E1DE449",
                    },
                    "/models/BasicModel",
                  ],
                ],
              },
            },
            "greeting": Object {
              "type": "string",
            },
            "postfix": Object {
              "type": "string",
            },
          },
          "required": Array [
            "greeting",
            "basic",
          ],
          "title": "AdvancedModel",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGateway::Model",
    },
    "OpenApiOpenApiApiBasicModel1A7FD6A8": Object {
      "Properties": Object {
        "ContentType": "application/json",
        "Name": "BasicModel",
        "RestApiId": Object {
          "Ref": "OpenApiOpenApiApi2E1DE449",
        },
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": Object {
            "someNumber": Object {
              "pattern": "[0-9]+",
              "type": "number",
            },
            "someString": Object {
              "type": "string",
            },
          },
          "required": Array [
            "someString",
            "someNumber",
          ],
          "title": "BasicModel",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGateway::Model",
    },
    "OpenApiOpenApiApiCloudWatchRole26232647": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "OpenApiOpenApiApiDeployment4D8213A63de7627c589dd84322c511723a574653": Object {
      "DependsOn": Array [
        "OpenApiOpenApiApiAdvancedModelD703FA70",
        "OpenApiOpenApiApiBasicModel1A7FD6A8",
        "OpenApiOpenApiApihelloadvancedPOST9541C057",
        "OpenApiOpenApiApihelloadvanced545D9C56",
        "OpenApiOpenApiApihellobasicPOST2DD93CCE",
        "OpenApiOpenApiApihellobasic894AB878",
        "OpenApiOpenApiApihello7632442C",
        "OpenApiOpenApiApiparamBodyValidatorB7E8FC6D",
        "OpenApiOpenApiApiResponseModel3EE343F8",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "OpenApiOpenApiApi2E1DE449",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "OpenApiOpenApiApiDeploymentStageprod143ED280": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "OpenApiOpenApiApiDeployment4D8213A63de7627c589dd84322c511723a574653",
        },
        "RestApiId": Object {
          "Ref": "OpenApiOpenApiApi2E1DE449",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "OpenApiOpenApiApiResponseModel3EE343F8": Object {
      "Properties": Object {
        "ContentType": "application/json",
        "Name": "ResponseModel",
        "RestApiId": Object {
          "Ref": "OpenApiOpenApiApi2E1DE449",
        },
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": Object {
            "message": Object {
              "type": "string",
            },
          },
          "required": Array [
            "message",
          ],
          "title": "ResponseModel",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGateway::Model",
    },
    "OpenApiOpenApiApihello7632442C": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "OpenApiOpenApiApi2E1DE449",
            "RootResourceId",
          ],
        },
        "PathPart": "{hello}",
        "RestApiId": Object {
          "Ref": "OpenApiOpenApiApi2E1DE449",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "OpenApiOpenApiApihelloadvanced545D9C56": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "OpenApiOpenApiApihello7632442C",
        },
        "PathPart": "advanced",
        "RestApiId": Object {
          "Ref": "OpenApiOpenApiApi2E1DE449",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "OpenApiOpenApiApihelloadvancedPOST9541C057": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "blogAuthorizerF1D3AEF3",
        },
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "advancedLambdaFunction225720E0",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "OpenApiOpenApiApiResponseModel3EE343F8",
              },
            },
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestModels": Object {
          "application/json": Object {
            "Ref": "OpenApiOpenApiApiAdvancedModelD703FA70",
          },
        },
        "RequestParameters": Object {
          "method.request.path.hello": true,
        },
        "RequestValidatorId": Object {
          "Ref": "OpenApiOpenApiApiparamBodyValidatorB7E8FC6D",
        },
        "ResourceId": Object {
          "Ref": "OpenApiOpenApiApihelloadvanced545D9C56",
        },
        "RestApiId": Object {
          "Ref": "OpenApiOpenApiApi2E1DE449",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "OpenApiOpenApiApihelloadvancedPOSTApiPermissionTesttestOpenApiOpenApiApi003C76EEPOSThelloadvanced473E8794": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "advancedLambdaFunction225720E0",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "OpenApiOpenApiApi2E1DE449",
              },
              "/test-invoke-stage/POST/*/advanced",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "OpenApiOpenApiApihelloadvancedPOSTApiPermissiontestOpenApiOpenApiApi003C76EEPOSThelloadvancedDF46C5F1": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "advancedLambdaFunction225720E0",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "OpenApiOpenApiApi2E1DE449",
              },
              "/",
              Object {
                "Ref": "OpenApiOpenApiApiDeploymentStageprod143ED280",
              },
              "/POST/*/advanced",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "OpenApiOpenApiApihellobasic894AB878": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "OpenApiOpenApiApihello7632442C",
        },
        "PathPart": "basic",
        "RestApiId": Object {
          "Ref": "OpenApiOpenApiApi2E1DE449",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "OpenApiOpenApiApihellobasicPOST2DD93CCE": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "blogAuthorizerF1D3AEF3",
        },
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "basicLambdaFunctionF69553F9",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": Object {
                "Ref": "OpenApiOpenApiApiResponseModel3EE343F8",
              },
            },
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestModels": Object {
          "application/json": Object {
            "Ref": "OpenApiOpenApiApiBasicModel1A7FD6A8",
          },
        },
        "RequestParameters": Object {
          "method.request.path.hello": true,
        },
        "RequestValidatorId": Object {
          "Ref": "OpenApiOpenApiApiparamBodyValidatorB7E8FC6D",
        },
        "ResourceId": Object {
          "Ref": "OpenApiOpenApiApihellobasic894AB878",
        },
        "RestApiId": Object {
          "Ref": "OpenApiOpenApiApi2E1DE449",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "OpenApiOpenApiApihellobasicPOSTApiPermissionTesttestOpenApiOpenApiApi003C76EEPOSThellobasic1B1480BE": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "basicLambdaFunctionF69553F9",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "OpenApiOpenApiApi2E1DE449",
              },
              "/test-invoke-stage/POST/*/basic",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "OpenApiOpenApiApihellobasicPOSTApiPermissiontestOpenApiOpenApiApi003C76EEPOSThellobasic15B41AC8": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "basicLambdaFunctionF69553F9",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "OpenApiOpenApiApi2E1DE449",
              },
              "/",
              Object {
                "Ref": "OpenApiOpenApiApiDeploymentStageprod143ED280",
              },
              "/POST/*/basic",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "OpenApiOpenApiApiparamBodyValidatorB7E8FC6D": Object {
      "Properties": Object {
        "RestApiId": Object {
          "Ref": "OpenApiOpenApiApi2E1DE449",
        },
        "ValidateRequestBody": true,
        "ValidateRequestParameters": true,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
    "advancedLambdaFunction225720E0": Object {
      "DependsOn": Array [
        "advancedLambdaFunctionServiceRole94547389",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersed882f74d49503232e12bf9cada04c32c5c07a9222b6d2b06c5f23a481e84ab6S3Bucket65B490D4",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersed882f74d49503232e12bf9cada04c32c5c07a9222b6d2b06c5f23a481e84ab6S3VersionKeyBA2A8C50",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersed882f74d49503232e12bf9cada04c32c5c07a9222b6d2b06c5f23a481e84ab6S3VersionKeyBA2A8C50",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "advancedLambdaFunctionServiceRole94547389",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "advancedLambdaFunctionServiceRole94547389": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "authorizerLambdaFunction52301750": Object {
      "DependsOn": Array [
        "authorizerLambdaFunctionServiceRole2AEEDAD3",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters85328f19b68253a2c5a78f85945770d92a8e35594f71eb10e9b33acafa868726S3Bucket18A54A74",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters85328f19b68253a2c5a78f85945770d92a8e35594f71eb10e9b33acafa868726S3VersionKeyFEE45B1A",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters85328f19b68253a2c5a78f85945770d92a8e35594f71eb10e9b33acafa868726S3VersionKeyFEE45B1A",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "FunctionName": "blogAuthorizer",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "authorizerLambdaFunctionServiceRole2AEEDAD3",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "authorizerLambdaFunctionServiceRole2AEEDAD3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "authorizerLambdaFunctiontestblogAuthorizerD3C51414Permissions73ABAB10": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "authorizerLambdaFunction52301750",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "OpenApiOpenApiApi2E1DE449",
              },
              "/authorizers/",
              Object {
                "Ref": "blogAuthorizerF1D3AEF3",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "basicLambdaFunctionF69553F9": Object {
      "DependsOn": Array [
        "basicLambdaFunctionServiceRole3D0D875F",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters4229e3ca613f457841c56f01ac9c10a33a209ecd00ed87c06aa628b1d1063b76S3Bucket38E835CA",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4229e3ca613f457841c56f01ac9c10a33a209ecd00ed87c06aa628b1d1063b76S3VersionKey2EDD6DB1",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4229e3ca613f457841c56f01ac9c10a33a209ecd00ed87c06aa628b1d1063b76S3VersionKey2EDD6DB1",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "basicLambdaFunctionServiceRole3D0D875F",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "basicLambdaFunctionServiceRole3D0D875F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "blogAuthorizerF1D3AEF3": Object {
      "Properties": Object {
        "AuthorizerUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":apigateway:",
              Object {
                "Ref": "AWS::Region",
              },
              ":lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "authorizerLambdaFunction52301750",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
        "IdentitySource": "method.request.header.Authorization",
        "Name": "testblogAuthorizerD3C51414",
        "RestApiId": Object {
          "Ref": "OpenApiOpenApiApi2E1DE449",
        },
        "Type": "TOKEN",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
  },
}
`;
